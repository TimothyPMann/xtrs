/* umount.ccc -- Misosys C program to unmount an emulated floppy on xtrs */

/* XXX: Assumes the original xtrs method where an emulated floppy
 * always has the name "diskM-N" where M is the model and N is the
 * unit number.  This does not work if gxtrs's dialog has been used to
 * mount a floppy with a name of a different format.  To fix this will
 * at least require adding an emt that calls trs_disk_set_name.
 */

/* 
 * Copyright (c) 1998-2008, Timothy P. Mann
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#option redirect 0
#include "xtrsemt.h"
#include "xtrsemt.ccc"  /* could use separate compilation instead */

usage()
{
    fprintf(stderr, "usage: umount unit#\n");
    exit(1);
}

#define DDIRSIZE 256
#define DNAMESIZE 512
#define CMDSIZE 512
#define ERRBUFSIZE 512

int main(argc, argv)
     int argc;
     char **argv;
{
    char ddir[DDIRSIZE];
    char dname[DNAMESIZE], cmd[CMDSIZE];
    char errbuf[ERRBUFSIZE];
    char model[4];
    int hl, bc, de, ret;
    char *retp;

    if (argc != 2 || !isdigit(argv[1][0])) {
	usage();
    }
    retp = emt_gtddir(ddir, DDIRSIZE);
    if (retp == NULL) {
	emt_strerror(errno, errbuf, ERRBUFSIZE);
	fprintf(stderr, "emt_getddir: %s\n", errbuf);
	exit(1);
    }
    emt_4misc(EMT_MISC_QUERY_MODEL, &hl, &bc, &de);
    if (hl == 5) {
	strcpy(model, "4p");
    } else {
	sprintf(model, "%d", hl);
    }
    sprintf(dname, "%s/disk%s-%s", ddir, model, argv[1]);
    sprintf(cmd, "rm -f %s", dname);
    /*printf("$ %s\n", cmd);*/
    ret = emt_system(cmd);
    if (ret != 0) {
	emt_strerror(errno, errbuf, ERRBUFSIZE);
	fprintf(stderr, "emt_system: %s\n", errbuf);
	exit(1);
    }
    emt_misc(EMT_MISC_DISK_CHANGE);
    exit(0);
}
